--- 
- 
  name: "Check if certificate already exists."
  register: letsencrypt_cert
  stat: 
    path: "/etc/letsencrypt/live/{{ item.servername}}/cert.pem"
  with_items: "{{ apache_vhosts }}"
- 
  name: "Stop services to allow certbot to generate a cert."
  service: 
    name: "{{ item }}"
    state: stopped
  with_items: "{{ certbot_create_standalone_stop_services }}"
- 
  name: "Generate new Certificate request"
  shell: "certbot certonly --standalone --noninteractive --agree-tos --email support@prominic.net -d {{ item.item.servername}}"
  with_items: "{{ letsencrypt_cert.results }}"
- 
  name: "Start services after cert has been generated."
  service: 
    name: "{{ item }}"
    state: started
  with_items: "{{ certbot_create_standalone_stop_services }}"
- 
  lineinfile: 
    dest: "/etc/nginx/sites-enabled/{{ id }}"
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
  name: "Enabling SSL in Nginx"
  notify: 
    - "restart nginx"
    - "restart php7.1-fpm"
  with_items: 
    - 
      line: "    listen              443 ssl;"
      regexp: "    #listen              443 ssl;"
    - 
      line: "    ssl_certificate  /etc/letsencrypt/live/{{ id }}/fullchain.pem;"
      regexp: "    #ssl_certificate "
    - 
      line: "    ssl_certificate_key /etc/letsencrypt/live/{{ id }}/privkey.pem;"
      regexp: "    #ssl_certificate_key "
    - 
      line: "    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;"
      regexp: "    #ssl_protocols"
    - 
      line: "    ssl_ciphers HIGH:!aNULL:!MD5;"
      regexp: "    #ssl_ciphers"
- 
  name: "Restart service Nginx, in all cases"
  service: 
    name: nginx
    state: restarted
